public class Solution {

	/*	Binary Tree Node class 
	 * 
	 * 	class BinaryTreeNode<T> {
			T data;
			BinaryTreeNode<T> left;
			BinaryTreeNode<T> right;
			
			public BinaryTreeNode(T data) {
				this.data = data;
			}
		}
		*/
	
		public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr, int n){
			if(arr.length<=0)
			return null;

			return converttoBST(arr,0,arr.length-1);

		}
		private static  BinaryTreeNode<Integer> converttoBST(int[] arr,int si,int ei){
			if(si>ei){
				return null;
			}
			int mid= (si+ei)/2;
			BinaryTreeNode<Integer> root=new BinaryTreeNode<>(arr[mid]);
			root.left=converttoBST(arr,si,mid-1);
			root.right=converttoBST(arr,mid+1,ei);

			return root;

		}
		
	}